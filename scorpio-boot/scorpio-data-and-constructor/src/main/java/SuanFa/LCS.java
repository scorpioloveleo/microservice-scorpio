package SuanFa;

import java.util.Arrays;

public class LCS {
    //最长公共子序列
    public static void main(String[] args) {
        /*String str1 ="ABCPDSFJGODIHJOFDIUSHGD";
        String str2 ="OSDIHGKODGHBLKSJBHKAGHI";*/
        String str1 ="AXBDC";
        String str2 ="ABDCX";
        int[][] lcs = lcs(str1, str2);
        System.out.println(Arrays.deepToString(lcs));
        /*[[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1],
        [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1],
        [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1],
        [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1],
        [0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1],
        [0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2],
        [0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2],
        [0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 3, 3, 3, 3, 3, 3, 3, 3],
        [0, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 4, 4, 4],
        [1, 1, 1, 1, 1, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 4, 4, 4],
        [1, 1, 2, 2, 2, 2, 2, 3, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4],
        [1, 1, 2, 3, 3, 3, 3, 3, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 5],
        [1, 1, 2, 3, 4, 4, 4, 4, 4, 4, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5],
        [1, 1, 2, 3, 4, 4, 4, 4, 4, 4, 5, 5, 5, 5, 5, 6, 6, 6, 6, 6, 6, 6, 6],
        [2, 2, 2, 3, 4, 4, 4, 5, 5, 5, 5, 5, 5, 5, 5, 6, 6, 6, 6, 6, 6, 6, 6],
        [2, 2, 2, 3, 4, 4, 4, 5, 5, 5, 5, 5, 5, 5, 5, 6, 6, 6, 6, 6, 6, 6, 6],
        [2, 2, 3, 3, 4, 4, 4, 5, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6],
        [2, 2, 3, 4, 4, 4, 4, 5, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 7],
        [2, 2, 3, 4, 4, 4, 4, 5, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 7],
        [2, 3, 3, 4, 4, 4, 4, 5, 6, 6, 6, 6, 6, 6, 7, 7, 7, 7, 7, 7, 7, 7, 7],
        [2, 3, 3, 4, 5, 5, 5, 5, 6, 6, 7, 7, 7, 7, 7, 7, 7, 8, 8, 8, 8, 8, 8],
        [2, 3, 3, 4, 5, 6, 6, 6, 6, 7, 7, 7, 7, 7, 7, 7, 7, 8, 8, 8, 9, 9, 9],
        [2, 3, 4, 4, 5, 6, 6, 6, 7, 7, 7, 7, 7, 7, 7, 7, 7, 8, 8, 8, 9, 9, 9]]*/

    }
    
    public static int[][] lcs(String text1, String text2){
        int i = text1.length();
        int j = text2.length();

        char[] str1 = text1.toCharArray();
        char[] str2 = text2.toCharArray();
        //初始化表
        int[][] dp = new int[i][j];

        for (int k = 0; k < i; k++) {
            dp[k][0] = 0;
        }
        for (int k = 0; k < j; k++) {
            dp[0][k] = 0;

        }
        //记录字符串
        String[][] strings = new String[i][j];
        for (int k = 0; k < i; k++) {
            for (int l = 0; l < j; l++) {
                strings[k][l] = "";
            }
        }


        for(int m=0; m<i; m++){
            for (int n = 0; n <j; n++) {
                int f = m-1 < 0 ? 0 : m-1;
                int s = n-1 < 0 ? 0 : n-1;
                if(str1[m] == str2[n]){
                    dp[m][n] = dp[f][s]+1;
                    strings[m][n] =strings[f][s] + str1[m];
                }
/*[[A, A, A, A, A], [, , , , AX], [, B, B, B, B], [, B, BD, BD, BD], [, B, BD, BDC, BDC]]
[[1, 1, 1, 1, 1], [1, 1, 1, 1, 2], [1, 2, 2, 2, 2], [1, 2, 3, 3, 3], [1, 2, 3, 4, 4]]*/

                if(str1[m] !=str2[n]){
                    dp[m][n] = Math.max(dp[f][n], dp[m][s]);
                    if(dp[f][n] >= dp[m][s]){
                        strings[m][n] = strings[f][n];
                    }else {
                        strings[m][n] = strings[m][s];
                    }
                }

            }
        }
        System.out.println(strings[i-1][j-1]);
        System.out.println(Arrays.deepToString(strings));
        return dp;
    }
}
